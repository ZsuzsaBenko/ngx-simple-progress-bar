{
    "root": true,
    "ignorePatterns": [
        "*.spec.ts",
        "environment.*",
        "main.ts",
        "polyfills.ts",
        "projects/**/*",
        "test.ts"
    ],
    "overrides": [
        {
            "files": [
                "*.ts"
            ],
            "parserOptions": {
                "project": [
                    "tsconfig.json"
                ],
                "createDefaultProgram": true
            },
            "extends": [
                "plugin:@angular-eslint/template/process-inline-templates"
            ],
            "plugins": [
                "@angular-eslint",
                "@stylistic",
                "@typescript-eslint",
                "eslint-plugin-import",
                "eslint-plugin-jsdoc",
                "eslint-plugin-prefer-arrow"
            ],
            "rules": {
                "@angular-eslint/component-class-suffix": "error",
                "@angular-eslint/component-max-inline-declarations": "error",
                "@angular-eslint/component-selector": [
                    "error",
                    {
                        "type": "element",
                        "prefix": [
                            "app",
                            "ngx"
                        ],
                        "style": "kebab-case"
                    }
                ],
                "@angular-eslint/contextual-lifecycle": "error",
                "@angular-eslint/directive-class-suffix": "error",
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "prefix": [
                            "app",
                            "ngx"
                        ],
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/no-attribute-decorator": "error",
                "@angular-eslint/no-conflicting-lifecycle": "error",
                "@angular-eslint/no-forward-ref": "error",
                "@angular-eslint/no-input-rename": "error",
                "@angular-eslint/no-inputs-metadata-property": "error",
                "@angular-eslint/no-lifecycle-call": "error",
                "@angular-eslint/no-output-native": "error",
                "@angular-eslint/no-output-on-prefix": "error",
                "@angular-eslint/no-output-rename": "error",
                "@angular-eslint/no-outputs-metadata-property": "error",
                "@angular-eslint/no-pipe-impure": "error",
                "@angular-eslint/no-queries-metadata-property": "error",
                "@angular-eslint/prefer-output-readonly": "error",
                "@angular-eslint/use-component-view-encapsulation": "error",
                "@angular-eslint/use-lifecycle-interface": "error",
                "@angular-eslint/use-pipe-transform-interface": "error",
                "@typescript-eslint/adjacent-overload-signatures": "error",
                "@typescript-eslint/array-type": [
                    "error",
                    {
                        "default": "generic"
                    }
                ],
                "@typescript-eslint/await-thenable": "error",
                "@typescript-eslint/ban-ts-comment": "error",
                "@typescript-eslint/consistent-type-assertions": [
                    "error",
                    {
                        "assertionStyle": "as",
                        "objectLiteralTypeAssertions": "never"
                    }
                ],
                "@typescript-eslint/consistent-type-definitions": [
                    "error",
                    "interface"
                ],
                "@typescript-eslint/dot-notation": "error",
                "@typescript-eslint/default-param-last": "error",
                "@typescript-eslint/explicit-function-return-type": "error",
                "@typescript-eslint/explicit-member-accessibility": [
                    "error",
                    {
                        "accessibility": "no-public",
                        "overrides": {
                            "parameterProperties": "explicit"
                        }
                    }
                ],
                "@typescript-eslint/interface-name-prefix": "off",
                "@stylistic/member-delimiter-style": [
                    "error",
                    {
                        "multiline": {
                            "delimiter": "semi",
                            "requireLast": true
                        },
                        "singleline": {
                            "delimiter": "semi",
                            "requireLast": false
                        }
                    }
                ],
                "@typescript-eslint/member-ordering": "error",
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "default",
                        "format": [
                            "camelCase",
                            "UPPER_CASE",
                            "PascalCase"
                        ],
                        "leadingUnderscore": "forbid",
                        "trailingUnderscore": "forbid"
                    },
                    {
                        "selector": "variableLike",
                        "format": [
                            "camelCase",
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": "memberLike",
                        "format": [
                            "camelCase",
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": "property",
                        "format": [
                            "UPPER_CASE"
                        ],
                        "modifiers": [
                            "static"
                        ]
                    },
                    {
                        "selector": "enumMember",
                        "format": [
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": "typeLike",
                        "format": [
                            "PascalCase"
                        ]
                    }
                ],
                "@typescript-eslint/no-array-constructor": "error",
                "@typescript-eslint/no-empty-function": "error",
                "@typescript-eslint/no-empty-interface": "error",
                "@typescript-eslint/no-empty-object-type": "error",
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-floating-promises": "off",
                "@typescript-eslint/no-for-in-array": "error",
                "@typescript-eslint/no-implied-eval": "error",
                "@typescript-eslint/no-inferrable-types": [
                    "error",
                    {
                        "ignoreParameters": true
                    }
                ],
                "@typescript-eslint/no-misused-new": "error",
                "@typescript-eslint/no-namespace": "error",
                "@typescript-eslint/no-non-null-assertion": "error",
                "@typescript-eslint/no-parameter-properties": "off",
                "@typescript-eslint/no-require-imports": "error",
                "@typescript-eslint/no-shadow": [
                    "error",
                    {
                        "ignoreTypeValueShadow": true,
                        "ignoreFunctionTypeParameterNameValueShadow": true
                    }
                ],
                "@typescript-eslint/no-this-alias": "error",
                "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
                "@typescript-eslint/no-unnecessary-type-arguments": "error",
                "@typescript-eslint/no-unnecessary-type-assertion": "error",
                "@typescript-eslint/no-unsafe-function-type": "error",
                "@typescript-eslint/no-unused-expressions": [
                    "error",
                    {
                        "allowShortCircuit": true
                    }
                ],
                "@typescript-eslint/no-use-before-define": "off",
                "@typescript-eslint/no-var-requires": "off",
                "@typescript-eslint/no-wrapper-object-types": "error",
                "@typescript-eslint/prefer-enum-initializers": "error",
                "@typescript-eslint/prefer-for-of": "error",
                "@typescript-eslint/prefer-function-type": "error",
                "@typescript-eslint/prefer-namespace-keyword": "error",
                "@typescript-eslint/prefer-nullish-coalescing": "error",
                "@typescript-eslint/prefer-readonly": "error",
                "@typescript-eslint/promise-function-async": "error",
                "@stylistic/quotes": [
                    "error",
                    "single",
                    {
                        "allowTemplateLiterals": true
                    }
                ],
                "@typescript-eslint/require-await": "error",
                "@typescript-eslint/restrict-plus-operands": "error",
                "@stylistic/semi": [
                    "error",
                    "always"
                ],
                "@typescript-eslint/triple-slash-reference": [
                    "error",
                    {
                        "path": "always",
                        "types": "prefer-import",
                        "lib": "always"
                    }
                ],
                "@stylistic/type-annotation-spacing": [
                    "error",
                    {
                        "before": false,
                        "after": true,
                        "overrides": {
                            "arrow": {
                                "before": true,
                                "after": true
                            }
                        }
                    }
                ],
                "@typescript-eslint/unified-signatures": "error",
                "@stylistic/no-extra-parens": [
                    "error"
                ],
                "arrow-body-style": [
                    "error",
                    "as-needed"
                ],
                "arrow-parens": [
                    "error",
                    "as-needed"
                ],
                "brace-style": [
                    "error",
                    "1tbs"
                ],
                "class-methods-use-this": [
                    "error",
                    {
                        "enforceForClassFields": false
                    }
                ],
                "comma-dangle": "error",
                "comma-spacing": "error",
                "complexity": [
                    "error",
                    {
                        "max": 20
                    }
                ],
                "constructor-super": "error",
                "curly": "error",
                "default-case": "error",
                "default-param-last": "off",
                "eol-last": "error",
                "eqeqeq": [
                    "error",
                    "always"
                ],
                "guard-for-in": "error",
                "id-blacklist": [
                    "error",
                    "any",
                    "Number",
                    "number",
                    "String",
                    "string",
                    "Boolean",
                    "boolean",
                    "Undefined",
                    "undefined"
                ],
                "id-match": "error",
                "import/no-deprecated": "warn",
                "import/no-default-export": "error",
                "import/no-extraneous-dependencies": "error",
                "import/no-unassigned-import": "error",
                "import/order": [
                    "error",
                    {
                        "alphabetize": {
                            "order": "asc"
                        }
                    }
                ],
                "jsdoc/check-alignment": "error",
                "jsdoc/newline-after-description": "off",
                "keyword-spacing": [
                    "error",
                    {
                        "before": true,
                        "after": true
                    }
                ],
                "max-classes-per-file": "off",
                "max-len": [
                    "error",
                    {
                        "ignorePattern": "^(import|export|class|\\/\\/) ",
                        "code": 140
                    }
                ],
                "max-lines": [
                    "error",
                    400
                ],
                "multiline-comment-style": [
                    "error",
                    "bare-block"
                ],
                "newline-per-chained-call": [
                    "error",
                    {
                        "ignoreChainWithDepth": 3
                    }
                ],
                "new-parens": "error",
                "no-array-constructor": "off",
                "no-bitwise": "error",
                "no-caller": "error",
                "no-cond-assign": "error",
                "no-console": [
                    "error",
                    {
                        "allow": [
                            "error"
                        ]
                    }
                ],
                "no-debugger": "error",
                "no-duplicate-case": "error",
                "no-duplicate-imports": "error",
                "no-empty": "error",
                "no-empty-function": "off",
                "no-eval": "error",
                "no-extra-bind": "error",
                "no-extra-parens": "error",
                "no-extra-semi": "error",
                "no-fallthrough": "error",
                "no-implied-eval": "off",
                "no-invalid-this": "off",
                "no-multiple-empty-lines": [
                    "error",
                    {
                        "max": 1
                    }
                ],
                "no-new-func": "error",
                "no-new-wrappers": "error",
                "no-plusplus": "off",
                "no-redeclare": "error",
                "no-restricted-imports": [
                    "error",
                    {
                        "name": "rxjs/Rx",
                        "message": "Please import directly from 'rxjs' instead"
                    }
                ],
                "no-restricted-syntax": [
                    "error",
                    "ForInStatement"
                ],
                "no-return-await": "error",
                "no-sequences": "error",
                "no-shadow": "off",
                "no-sparse-arrays": "error",
                "no-template-curly-in-string": "error",
                "no-trailing-spaces": "error",
                "no-throw-literal": "error",
                "no-undef-init": "error",
                "no-underscore-dangle": "error",
                "no-unsafe-finally": "error",
                "no-unused-labels": "error",
                "no-unused-expressions": "off",
                "no-useless-constructor": "off",
                "no-var": "error",
                "no-void": "error",
                "object-shorthand": "error",
                "one-var": [
                    "error",
                    "never"
                ],
                "padding-line-between-statements": [
                    "off",
                    {
                        "blankLine": "always",
                        "prev": "*",
                        "next": "return"
                    }
                ],
                "prefer-arrow/prefer-arrow-functions": "error",
                "prefer-const": "error",
                "prefer-object-spread": "error",
                "prefer-template": "error",
                "quote-props": [
                    "error",
                    "as-needed"
                ],
                "quotes": "off",
                "radix": "error",
                "require-await": "off",
                "sort-keys": "off",
                "space-before-function-paren": [
                    "error",
                    {
                        "anonymous": "never",
                        "asyncArrow": "always",
                        "named": "never"
                    }
                ],
                "space-infix-ops": [
                    "error",
                    {
                        "int32Hint": false
                    }
                ],
                "space-in-parens": [
                    "error",
                    "never"
                ],
                "use-isnan": "error",
                "valid-typeof": "off",
                "yoda": [
                    "error"
                ]
            }
        },
        {
            "files": [
                "*.html"
            ],
            "extends": [
                "plugin:@angular-eslint/template/recommended"
            ],
            "rules": {
                "@angular-eslint/template/no-call-expression": "off"
            }
        }
    ]
}
